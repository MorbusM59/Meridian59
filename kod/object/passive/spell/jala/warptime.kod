% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
WarpTime is Jala

constants:

   include blakston.khd

resources:

   WarpTime_name_rsc = "warp time"
   WarpTime_icon_rsc = iwarptim.bgf
   WarpTime_desc_rsc = \
      "The words of this song form an enchantment which increases the time "
      "that a spellcaster must hold trance to cast a spell."
   WarpTime_StartEnchantment = \
      "A woozy feeling passes through your head, slowing your mental spell preparations, "
      "your thoughts dripping like honey through your brain."
   WarpTime_RemoveEnchantment = \
      "A rushing sensation passes through your head, speeding your mental spell preparations "
      "back to normal."

   Warptime_song = jala4.mp3
 
classvars:

   vrName = WarpTime_name_rsc
   vrIcon = WarpTime_icon_rsc
   vrDesc = WarpTime_desc_rsc

   viMana = 5          % Mana is amount used upon inititiation
   viManaDrain = 5     % Drain is amount used every viDrainTime milliseconds
   viDrainTime = 5000    % Drain some mana every viDrainTime milliseconds
   viSpell_num = SID_WARP_TIME

   viSchool = SS_JALA
   viSpell_level = 2

   viHarmful = False

properties:
   
   pbUserEffects = TRUE
   prMusic= warptime_song

messages:

   ResetReagents()
   {
      plReagents = $;

      return;
   }

   StartEnchantment( who = $ )
   "Starts enchantment effect on one player"
   {
			% removed component, under construction
      
      propagate;
   }

   GetStretchedTime(oldtime=0, iSpellPower=0, oRoom=$)
   {
      if oRoom <> $
      {
         iSpellPower = nth(send(oRoom,@GetEnchantmentState,#what=self),3);
      }
      
      return oldtime*(100+iSpellPower)/100;
   }
   
   GetUnstretchedTime(oldtime=0, iSpellPower=0, oRoom=$)
   {
      if oRoom <> $
      {
         iSpellPower = nth(send(oRoom,@GetEnchantmentState,#what=self),3);
      }
      
      return oldtime*100/(100+iSpellPower);
   }

   RemoveEnchantment(who = $)
   "Called instead of EndEnchantment when trance is broken"
   {
			% removed component, under construction
      
      propagate;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
