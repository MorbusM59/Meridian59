% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
RoomEnchantment is Spell

constants:

   include blakston.khd

resources:

   RoomEnchantment_name_rsc = "room enchantment"
   RoomEnchantment_icon_rsc = iheat.bgf
   RoomEnchantment_desc_rsc = \
      "An enchantment which is attached to a room."

classvars:

   vrName = RoomEnchantment_name_rsc
   vrIcon = RoomEnchantment_icon_rsc
   vrDesc = RoomEnchantment_desc_rsc

properties:

   piDamage_percent_reduce = 0
   piDamage_flat_reduce = 0
   piDefense_bonus = 0
   piDodge_bonus = 0
   piAttack_bonus = 0
   piDamage_bonus = 0

messages:
	 
   %%% Defense and attack modifier stuff.

   ModifyHitRoll(who = $,what = $,hit_roll = $)
   {
      local iAttackbonus;
	  
	  iAttackbonus = 0;
	  if piAttack_bonus <> 0
	  {
         iAttackbonus = piAttack_bonus * (send(send(who,@GetOwner),@GetEnchantmentState,#what=self)+1) / 100;
	  }
	  return iAttackbonus;
   }
   
   ModifyDamage(who = $,what = $,damage = $)
   {
      local iDamagebonus;
	  
	  iDamagebonus = 0;
	  if piDamage_bonus <> 0
	  {
         iDamagebonus = piDamage_bonus * (send(send(who,@GetOwner),@GetEnchantmentState,#what=self)+1) / 100;
	  }
	  return iDamagebonus;
   }

   ModifyDefenseDamageFlat(who = $,what = $,damage = $,atype = 0,aspell = 0)
   "Increase or decrease damage done to defender by a flat amount."
   {
      local iDamageflatreduce;

      iDamageflatreduce = 0;
	  if piDamage_flat_reduce <> 0
	  {
         iDamageflatreduce = piDamage_flat_reduce * (send(send(who,@GetOwner),@GetEnchantmentState,#what=self)+1) / 100;
      }
      if aspell <> 0
      {
         % Reduce damage if part of the damage is spell
         if atype <> 0
         {
            % Half of the damage reduction if we're doing both weapon
            % and spell damage types.
            iDamageflatreduce = iDamageflatreduce / 2;
         }
         else
         {
            % If we're doing pure spell damage, we get no reduction.
            iDamageflatreduce = 0;
         }
      }
      
      return iDamageflatreduce;
   }
   
   ModifyDefenseDamagePercent(who = $,what = $,damage = $,atype = 0,aspell = 0)
   "Increase or decrease damage done to defender by a percentage."
   {
      local iDamagepercentreduce;

      iDamagepercentreduce = 0;
	  if piDamage_percent_reduce <> 0
	  {
         iDamagepercentreduce = piDamage_percent_reduce * (send(send(who,@GetOwner),@GetEnchantmentState,#what=self)+1) / 100;
      }
      if aspell <> 0
      {
         % Reduce damage if part of the damage is spell
         if atype <> 0
         {
            % Half of the damage reduction if we're doing both weapon
            % and spell damage types.
            iDamagepercentreduce = iDamagepercentreduce / 2;
         }
         else
         {
            % If we're doing pure spell damage, we get no reduction.
            iDamagepercentreduce = 0;
         }
      }
      
      return iDamagepercentreduce;
   }

   ModifyDefensePower(who = $,what = $,defense_power = 0)
   {
      local iDefensebonus;
	  
      iDefensebonus = 0;
	  if piDefense_bonus <> 0
	  {
         iDefensebonus = piDefense_bonus * (send(send(who,@GetOwner),@GetEnchantmentState,#what=self)+1) / 100;
      }
	  
	  return iDefensebonus;
   }

   ModifyDodgeAbility(who = $,defense_power = 0)
   {
      local iDodgebonus;
	  
      iDodgebonus = 0;
	  if piDodge_bonus <> 0
	  {
         iDodgebonus = piDodge_bonus * (send(send(who,@GetOwner),@GetEnchantmentState,#what=self)+1) / 100;
      }
	  
	  return iDodgebonus;
   }

   DamageGear(who = $,what = $)
   {
      return;
   }

end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
