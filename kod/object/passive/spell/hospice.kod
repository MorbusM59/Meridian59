% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Hospice is Spell

constants:

   include blakston.khd

resources:

   hospice_name_rsc = "hospice"
   hospice_icon_rsc = ihospice.bgf
   hospice_desc_rsc = \
      "Rejuvenates the target of the spell with Shal'ille's healing energy.  "
      "Shal'ille gives a small reward toward the karma of the mage who heals "
      "another good soul.  "
      "Requires herbs to cast."

   hospice_on = "Shal'ille's aura engulfs you, gradually restoring ~g~B%i~B~n hitpoints."
   hospice_on_other = "Shal'ille's aura engulfs %s%s, gradually restoring ~g~B%i~B~n hitpoints."
	hospice_wearing_off = "Shal'ille's healing aura leaves you ."

classvars:

   vrName = hospice_name_rsc
   vrIcon = hospice_icon_rsc
   vrDesc = hospice_desc_rsc

   viSchool = SS_SHALILLE
   viSpell_num = SID_HOSPICE
   viMana = 10
   viSpell_level = 3
   viChance_To_Increase = 15

   viCast_time = 600

   viFlash = FLASH_GOOD

properties:

messages:

   ResetReagents()
   {
      % separate message so can change, then set from admin mode

      plReagents = $;
      plReagents = Cons([&Herbs,3],plReagents);

      return;
   }

   GetNumSpellTargets()
   {
      return 1;
   }

   CanPayCosts(who = $, lTargets = $, bItemCast = FALSE)
   {
      local target, i;
      
      % Can cast spell if the 1 target item is a user
      if Length(lTargets) <> 1
      {
         return FALSE;
      }

      target = First(lTargets);
      if not IsClass(target, &User)
      {
         if not bItemCast
         {
            Send(who, @MsgSendUser, #message_rsc=spell_bad_target, 
                 #parm1=vrName,#parm2=Send(target,@GetDef),#parm3=Send(target,@GetName));
         }
         
         return FALSE;
      }

      propagate;
   }

   CastSpell(who = $, lTargets = $, iSpellPower = 0)
   {
      local iHeal, iTrueHeal, oTarget, i;

      oTarget = First(lTargets);
          
      iHeal = iSpellPower/2 + Send(oTarget,@GetKarma)/10;
      iHeal = bound(iHeal,0,50);
		iTrueHeal = iHeal * Send(oTarget,@GetMaxHealth) / 150;
		iHeal = iHeal * 100;
		
		for i in send(oTarget,@GetHealOverTime)
		{
			if First(i) = self AND Nth(i,5) = who
			{
				send(oTarget,@DeleteHealOverTime,#what=First(i),#who=who);
			}
		}

      send(oTarget,@AddHealOverTime,#strength=iHeal,#duration=10000,#what=self,#who=who);
		
      Send(oTarget,@MsgSendUser,#message_rsc=hospice_on,#parm1=iTrueHeal);
		
      if who <> oTarget 
      {
         Send(who,@MsgSendUser,#message_rsc=hospice_on_other,#parm1=Send(oTarget,@GetDef),#parm2=Send(oTarget,@GetName),#parm3=iTrueHeal);
      }   

      propagate;
   }
	
   HoTWearingOff(who=$,overtimeeffect=$,report=TRUE,delayed=FALSE)
   {
		if report
		{
			send(who,@MsgSendUser,#message_rsc=hospice_wearing_off);
		}
      
      return;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
