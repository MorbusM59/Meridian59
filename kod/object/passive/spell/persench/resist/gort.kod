% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%S%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ArmorOfGort is ResistanceEnchantment

constants:

   include blakston.khd

resources:

   ArmorOfGort_name_rsc = "armor of Gort"
   ArmorOfGort_icon_rsc = igort.bgf
   ArmorOfGort_desc_rsc = \
      "Surrounds the caster with a powerful field which deflects "
      "damage from extreme blows.  "
      "Requires blue dragon scale to cast."
   
   ArmorOfGort_already_enchanted_rsc = "You already have the Armor of Gort."

   ArmorOfGort_on_rsc = "Your skin feels taut as the Armor of Gort forms around you."
   ArmorOfGort_off_rsc = "Your Armor of Gort dissipates."
   ArmorOfGort_success_rsc = "%s%s's skin tightens as the Armor of Gort forms."

   ArmorOfGort_spell_intro = "Kraanan Level 5: Magical armor that protects the caster."

classvars:

   viPersonal_ench = TRUE

   vrName = ArmorOfGort_name_rsc
   vrIcon = ArmorOfGort_icon_rsc
   vrDesc = ArmorOfGort_desc_rsc

   viSpell_num = SID_ARMOR_OF_GORT
   viMana = 10
   viSchool = SS_KRAANAN
   viSpell_level = 5

   viChance_To_Increase = 20
   viFlash = FLASH_GOOD_SELF
   
   viResistanceType = -ATCK_WEAP_ALL
   vrAlreadyEnchanted = ArmorOfGort_already_enchanted_rsc
   vrEnchantment_On = ArmorOfGort_On_rsc
   vrEnchantment_Off = ArmorOfGort_Off_rsc
   vrSuccess = ArmorOfGort_Success_rsc

   vrSpell_intro = ArmorOfGort_spell_intro

properties:    

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&BlueDragonScale,1],plReagents);

      return;
   }
   
   GetResistanceStrength(iSpellpower = 0)
   {
      %% strength varies from 7 to 40
      return iSpellPower/3 + 7;
   }

   GetDuration(iSpellPower = 0)
   {
      local iDuration; 

      iDuration = ((iSpellPower+1)/20) + 1;
      % Convert to minutes
      iDuration = iDuration * 60 * 1000;
      
      return iDuration;
   }

   ModifyDefenseDamage(who = $, what = $, damage = $, atype = 0, aspell = 0)
   {
      local iResistanceStrength, iMax;

      iResistanceStrength = Send(who,@GetEnchantedState,#what=self);
      iMax = 25 - (iResistanceStrength)/8;
      
      if aspell <> 0
      {
         % don't cap damage if there is a spell component
         iMax = MAX_DAMAGE_PER_HIT;
      }

      return bound(damage,0,iMax);
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
