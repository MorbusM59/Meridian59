% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ResistMagic is ResistanceEnchantment

constants:

   include blakston.khd

resources:

   resistmagic_name_rsc = "resist magic"
   resistmagic_icon_rsc = iresmagc.bgf
   resistmagic_desc_rsc = \
      "Drains some of the caster's resistance to physical damage to create a "
      "powerful barrier, that will protect her from magical attacks, both reducing "
      "their severity and limiting the amount of damage they can inflict.  "
      "Requires a blue dragon scale to cast."
   
   resistmagic_already_enchanted = "You are already resisting magic."
   resistmagic_success = "Kraanan fortifies %s%s against magic attacks."
   resistmagic_on = "Kraanan fortifies you against magic attacks."
   resistmagic_off = "Kraanan's magic departs, leaving you vulnerable to magic attacks once more."

classvars:

   viPersonal_ench = TRUE

   vrName = resistmagic_name_rsc
   vrIcon = resistmagic_icon_rsc
   vrDesc = resistmagic_desc_rsc

   viSpell_num = SID_RESIST_MAGIC
   viMana = 15
   viSchool = SS_KRAANAN
   viSpell_level = 5

   viChance_To_Increase = 30
   viFlash = FLASH_GOOD_SELF

   viResistanceType = -ATCK_SPELL_ALL
   vrAlreadyEnchanted = resistmagic_already_enchanted
   vrEnchantment_On = resistmagic_on
   vrEnchantment_Off = resistmagic_off
   vrSuccess  = resistmagic_success

properties:

messages:

   ResetReagents()
   {
      plReagents = $;
      plReagents = Cons([&BlueDragonScale,1],plReagents);

      return;
   }	 
   
   AddResistances(who=$,value=$)
   {
      Send(who,@AddResistance,#what=-ATCK_SPELL_ALL,#value=value);
      Send(who,@AddResistance,#what=-ATCK_WEAP_ALL,#value=-value/2);
      
      return;
   }

   GetResistanceStrength(iSpellpower = 0)
   {
      %% strength varies from 7 to 40
      return iSpellPower/3 + 7;
   }

   GetDuration(iSpellPower = 0)
   {
      local iDuration;	   
      
      % 1 to 6 minutes
      iDuration = ((iSpellPower+1)/20) + 1;
      % translate to milliseconds
      iDuration = iDuration * 60 * 1000;
      
      return iDuration;
   }
   
   ModifyDefenseDamage(who = $, what = $, damage = $, atype = 0, aspell = 0)
   {
      local iResistanceStrength, iMax;

      iResistanceStrength = Send(who,@GetEnchantedState,#what=self);
      iMax = 25 - (iResistanceStrength)/8;
      
      if atype <> 0
      {
         % don't cap damage if there is a weapon component
         iMax = MAX_DAMAGE_PER_HIT;
      }

      return bound(damage,0,iMax);
   }
   
   RemoveResistances(who=$,value=$)
   {
      Send(who,@RemoveResistance,#what=-ATCK_SPELL_ALL,#value=value);
      Send(who,@RemoveResistance,#what=-ATCK_WEAP_ALL,#value=-value/2);
      
      return;
   }

   GetPotionClass()
   {
      RETURN &ResistMagicPotion;
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
