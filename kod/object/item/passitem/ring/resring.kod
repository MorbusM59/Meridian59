% Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
% All rights reserved.
%
% This software is distributed under a license that is described in
% the LICENSE file that accompanies it.
%
% Meridian is a registered trademark.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% based off original kod by Justin, 98jsh@williams.edu

ResistRing is Ring

constants:

   include blakston.khd

resources:

   resistring_icon_rsc = ring3.bgf            
  
   resistring_use_rsc = "You put the ring on."
   resistring_dead_rsc = "The ring crumbles!"

classvars:

   vrIcon = resistring_icon_rsc

   vrUseMessage = resistring_use_rsc
   vrDeadMessage = resistring_dead_rsc

   viHits_init_min = 250
   viHits_init_max = 350

   viBulk = 5
   viWeight = 10
   
   viValue_average = 500

   % Resistance rings hide their color until revealed
   viUnrevealedColor = PT_ITEM_XLAT_BLUE_TO_WHITE

properties:

   piResistanceType = 0
   piResistanceChange = 50

messages:


   NewUsed(what = $)
   {

      if vrName = vrRealName
      {
         % Only give the message if it's identified.
         Send(poOwner, @MsgSendUser, #message_rsc=vrUseMessage);
      }
      
      send(self,@AddResistances);
      
      propagate;
   }

   NewUnused(what = $)
   {
      send(self,@RemoveResistances);
      
      propagate;
   }
      
   AddResistances()
   {
      local i;
      
      for i in send(self,@GetResistanceModifiers)
      {
         Send(poOwner,@AddResistance,#what=nth(i,1),#value=nth(i,2));
      }
      
      return;
   }

   RemoveResistances()
   {
      local i;
      
      for i in send(self,@GetResistanceModifiers)
      {
         Send(poOwner,@RemoveResistance,#what=nth(i,1),#value=nth(i,2));
      }
      
      return;
   }

   GetResistanceModifiers()
   {
      return [[piResistanceType,piResistanceChange]];
   }


end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

